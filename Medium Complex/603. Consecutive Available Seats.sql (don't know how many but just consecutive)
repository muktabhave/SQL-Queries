Table: Cinema

+-------------+------+
| Column Name | Type |
+-------------+------+
| seat_id     | int  |
| free        | bool |
+-------------+------+
In SQL, seat_id is an auto-increment primary key column for this table.
Each row of this table indicates whether the ith seat is free or not. 1 means free while 0 means occupied.
 

Find all the consecutive available seats in the cinema.

Return the result table ordered by seat_id in ascending order.

The test cases are generated so that more than two seats are consecutively available.

The result format is in the following example.

 

Example 1:

Input: 
Cinema table:
+---------+------+
| seat_id | free |
+---------+------+
| 1       | 1    |
| 2       | 0    |
| 3       | 1    |
| 4       | 1    |
| 5       | 1    |
+---------+------+
Output: 
+---------+
| seat_id |
+---------+
| 3       |
| 4       |
| 5       |
+---------+

SOLUTION_________________________________________________________________________________________________________________________

select distinct s1.seat_id from
cinema s1 join cinema s2
on (abs(s2.seat_id-s1.seat_id)=1)
where s1.free=1
and s2.free=1
order by 1

-- select s1.seat_id from
-- cinema s1 join cinema s2
-- on (s2.seat_id=s1.seat_id+1)
-- where s1.free=1 and s2.free=1
-- union
-- select s1.seat_id from
-- cinema s1 join cinema s3
-- on (s3.seat_id=s1.seat_id-1)
-- where s1.free=1 and s3.free=1
-- order by 1

